-----Rooms model

namespace Honeywell.Model
{
    public class Rooms
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public double Temperature { get; set; }
        public int aqi { get; set; }
    }
    
}
-------Floors Model----

namespace Honeywell.Model
{
    public class Floors
    {
        public int Id { get; set; }
        public  string Name { get; set; }
        public List<Rooms> Rooms { get; set; }

    }
}
--------Controller code-----

using Honeywell.Model;
using Microsoft.AspNetCore.Mvc;

namespace BuildingManagementAPI.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class BuildingController : ControllerBase
    {
        private static readonly List<Floors> Floors = new()
        {
            new Floors
            {
                Name = "Floor 1",
                Rooms = new List<Rooms>
                {
                    new Rooms { Name = "Room 1", Temperature = 20, AirQualityIndex = 40 },
                    new Rooms { Name = "Room 2", Temperature = 26, AirQualityIndex = 55 }
                }
            },
            new Floors
            {
                Name = "Floor 2",
                Rooms = new List<Rooms>
                {
                    new Rooms { Name = "Room 3", Temperature = 18, AirQualityIndex = 30 },
                    new Rooms { Name = "Room 4", Temperature = 28, AirQualityIndex = 60 }
                }
            }
        };

        [HttpGet("floors")]
        public IActionResult GetFloors()
        {
            return Ok(new { floors = Floors });
        }
    }

  }


------Program.cs---------------

using Microsoft.Extensions.Options;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

builder.Services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

var app = builder.Build();
builder.Services.AddCors(options =>
{
options.AddPolicy("AllowAngularApp", policy =>
{
policy.WithOrigins("http://localhost:4200")  // Add your front-end URL here
      .AllowAnyHeader()
      .AllowAnyMethod();
});
});



// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();
app.UseCors("AllowAngularApp");
app.UseAuthorization();

app.MapControllers();


app.Run();

-----Launchsettings Json---

{
  "$schema": "http://json.schemastore.org/launchsettings.json",
  "iisSettings": {
    "windowsAuthentication": false,
    "anonymousAuthentication": true,
    "iisExpress": {
      "applicationUrl": "http://localhost:64778",
      "sslPort": 44348
    }
  },
  "profiles": {
    "http": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "api/Building/floors",
      "applicationUrl": "http://localhost:5050",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "https": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "api/Building/floors",
      "applicationUrl": "https://localhost:7175;http://localhost:5050",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "IIS Express": {
      "commandName": "IISExpress",
      "launchBrowser": true,
      "launchUrl": "api/Building/floors",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}

